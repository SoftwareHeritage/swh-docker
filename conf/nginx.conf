worker_processes  4;

# Show startup logs on stderr; switch to debug to print, well, debug logs when
# running nginx-debug
error_log /dev/stderr info;

events {
  worker_connections 1024;
}

http {
  include            mime.types;
  default_type       application/octet-stream;
  sendfile           on;
  keepalive_timeout  65;

  # Built-in Docker resolver. Needed to allow on-demand resolution of proxy
  # upstreams.
  # resolver           127.0.0.11 valid=30s;

  upstream appserver {
    # fail_timeout=0 means we always retry an upstream even if it failed
    # to return a good HTTP response

    server "web:5004"  fail_timeout=0;
  }

  upstream prometheus {
    server "prometheus:9090"  fail_timeout=0;
  }

  upstream grafana {
    server "grafana:3000"  fail_timeout=0;
  }

  server {
    listen             5081 default_server;

    location /prometheus {
      set $upstream "http://prometheus";
      proxy_pass $upstream;
    }

    location /grafana {
      set $upstream "http://grafana";
      rewrite ^/grafana/(.*)$ /$1 break;
      proxy_pass $upstream;
    }

    location / {
      set $upstream "http://appserver";
      proxy_pass $upstream;
    }
  }
}
